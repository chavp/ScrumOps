@page "/teams/{TeamId:guid}/sprints/{SprintId:guid}/burndown"
@using ScrumOps.Shared.Contracts.Sprints
@using ScrumOps.Web.Services
@inject ISprintService SprintService
@inject NavigationManager Navigation
@inject ILogger<SprintBurndownComponent> Logger

<div class="container-fluid">
    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (burndownData != null)
    {
        <!-- Header -->
        <div class="row mb-3">
            <div class="col">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/sprints">Sprints</a></li>
                        <li class="breadcrumb-item"><a href="/teams/@TeamId/sprints/@SprintId">Sprint Details</a></li>
                        <li class="breadcrumb-item active">Burndown Chart</li>
                    </ol>
                </nav>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2>Sprint Burndown Chart</h2>
                        <p class="text-muted mb-0">Track remaining work over time</p>
                    </div>
                    <div>
                        <button class="btn btn-outline-primary btn-sm" @onclick="NavigateToDetails">
                            <i class="bi bi-arrow-left"></i> Back to Sprint
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Summary Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title text-muted">Total Hours</h5>
                        <h2 class="text-primary">@burndownData.TotalEstimatedHours.ToString("F1")</h2>
                        <small class="text-muted">estimated</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title text-muted">Completed</h5>
                        <h2 class="text-success">@burndownData.CompletedHours.ToString("F1")</h2>
                        <small class="text-muted">hours</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title text-muted">Remaining</h5>
                        <h2 class="text-warning">@burndownData.RemainingHours.ToString("F1")</h2>
                        <small class="text-muted">hours</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title text-muted">Progress</h5>
                        <h2 class="text-info">@burndownData.ProgressPercentage.ToString("F0")%</h2>
                        <small class="text-muted">complete</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- Progress Bar -->
        <div class="row mb-4">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Overall Progress</h5>
                        <div class="progress mb-2" style="height: 25px;">
                            <div class="progress-bar bg-success" 
                                 role="progressbar" 
                                 style="width: @burndownData.ProgressPercentage.ToString("F1")%">
                                @burndownData.ProgressPercentage.ToString("F0")% Complete
                            </div>
                        </div>
                        <div class="d-flex justify-content-between">
                            <small class="text-muted">@burndownData.CompletedHours.ToString("F1") hours completed</small>
                            <small class="text-muted">@burndownData.RemainingHours.ToString("F1") hours remaining</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Chart Placeholder -->
        <div class="row mb-4">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Burndown Chart</h5>
                    </div>
                    <div class="card-body">
                        @if (burndownData.DataPoints.Any())
                        {
                            <!-- Simple ASCII-style chart -->
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>Remaining Hours</th>
                                            <th>Ideal Remaining</th>
                                            <th>Completed Hours</th>
                                            <th>Visual</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var point in burndownData.DataPoints.OrderBy(p => p.Date))
                                        {
                                            <tr>
                                                <td>@point.Date.ToString("MMM dd")</td>
                                                <td>@point.RemainingHours.ToString("F1")</td>
                                                <td>@point.IdealRemainingHours.ToString("F1")</td>
                                                <td>@point.CompletedHours.ToString("F1")</td>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <!-- Remaining work bar -->
                                                        <div class="progress me-2" style="width: 100px; height: 8px;">
                                                            <div class="progress-bar bg-warning" 
                                                                 role="progressbar" 
                                                                 style="width: @CalculateBarWidth(point.RemainingHours, burndownData.TotalEstimatedHours)%">
                                                            </div>
                                                        </div>
                                                        <!-- Ideal line indicator -->
                                                        <div class="progress me-2" style="width: 100px; height: 8px;">
                                                            <div class="progress-bar bg-info" 
                                                                 role="progressbar" 
                                                                 style="width: @CalculateBarWidth(point.IdealRemainingHours, burndownData.TotalEstimatedHours)%">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            
                            <div class="mt-3">
                                <small class="text-muted">
                                    <span class="badge bg-warning me-2"></span>Actual Remaining
                                    <span class="badge bg-info me-2 ms-3"></span>Ideal Remaining
                                </small>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-5">
                                <i class="bi bi-graph-up display-4 text-muted"></i>
                                <p class="text-muted mt-3">No burndown data available yet</p>
                                <small class="text-muted">Data will appear as work progresses through the sprint</small>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Velocity Insights -->
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Sprint Insights</h5>
                    </div>
                    <div class="card-body">
                        @{
                            var daysInSprint = CalculateSprintDays();
                            var daysRemaining = CalculateDaysRemaining();
                            var idealDailyBurn = (double)burndownData.TotalEstimatedHours / Math.Max(daysInSprint, 1);
                            var actualDailyBurn = (double)burndownData.CompletedHours / Math.Max(daysInSprint - daysRemaining, 1);
                        }
                        
                        <div class="row">
                            <div class="col-sm-6">
                                <strong>Days in Sprint:</strong>
                                <p class="text-muted">@daysInSprint days</p>
                            </div>
                            <div class="col-sm-6">
                                <strong>Days Remaining:</strong>
                                <p class="text-muted">@daysRemaining days</p>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-sm-6">
                                <strong>Ideal Daily Burn:</strong>
                                <p class="text-muted">@idealDailyBurn.ToString("F1") hrs/day</p>
                            </div>
                            <div class="col-sm-6">
                                <strong>Actual Daily Burn:</strong>
                                <p class="text-muted @(actualDailyBurn >= idealDailyBurn ? "text-success" : "text-warning")">
                                    @(double.IsInfinity(actualDailyBurn) || double.IsNaN(actualDailyBurn) ? "0.0" : actualDailyBurn.ToString("F1")) hrs/day
                                </p>
                            </div>
                        </div>

                        @if (burndownData.ProgressPercentage < 100 && daysRemaining > 0)
                        {
                            var projectedDailyBurn = (double)burndownData.RemainingHours / daysRemaining;
                            <div class="mt-3 p-3 @(projectedDailyBurn > (idealDailyBurn * 1.2) ? "bg-warning" : "bg-light") rounded">
                                <strong>Projection:</strong>
                                <p class="mb-1">Need @projectedDailyBurn.ToString("F1") hrs/day to finish on time</p>
                                @if (projectedDailyBurn > (idealDailyBurn * 1.2))
                                {
                                    <small class="text-warning">⚠️ Team may need to reduce scope or extend sprint</small>
                                }
                                else if (projectedDailyBurn < (idealDailyBurn * 0.8))
                                {
                                    <small class="text-success">✅ Team is ahead of schedule</small>
                                }
                                else
                                {
                                    <small class="text-info">📈 Team is on track</small>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Recent Activity</h5>
                    </div>
                    <div class="card-body">
                        @if (burndownData.DataPoints.Any())
                        {
                            var recentPoints = burndownData.DataPoints.OrderByDescending(p => p.Date).Take(5);
                            @foreach (var point in recentPoints)
                            {
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <div>
                                        <strong>@point.Date.ToString("MMM dd, yyyy")</strong>
                                        <br />
                                        <small class="text-muted">@point.CompletedHours.ToString("F1") hours completed</small>
                                    </div>
                                    <div class="text-end">
                                        <span class="badge bg-primary">@point.RemainingHours.ToString("F1") hrs remaining</span>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No activity recorded yet</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <h4>Burndown data not available</h4>
            <p class="text-muted">Unable to load burndown chart for this sprint.</p>
            <button class="btn btn-primary" @onclick="NavigateToDetails">
                <i class="bi bi-arrow-left"></i> Back to Sprint
            </button>
        </div>
    }
</div>

@code {
    [Parameter] public Guid TeamId { get; set; }
    [Parameter] public Guid SprintId { get; set; }

    private SprintBurndownResponse? burndownData;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadBurndownData();
    }

    private async Task LoadBurndownData()
    {
        try
        {
            isLoading = true;
            burndownData = await SprintService.GetSprintBurndownAsync(TeamId, SprintId);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed to load burndown data for sprint {SprintId} in team {TeamId}", SprintId, TeamId);
            burndownData = null;
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToDetails()
    {
        Navigation.NavigateTo($"/teams/{TeamId}/sprints/{SprintId}");
    }

    private static double CalculateBarWidth(decimal value, decimal maxValue)
    {
        return maxValue > 0 ? (double)(value / maxValue * 100) : 0;
    }

    private int CalculateSprintDays()
    {
        // This would come from sprint data, defaulting to 14 days for 2-week sprint
        return 14;
    }

    private int CalculateDaysRemaining()
    {
        // This would be calculated from sprint end date
        // For now, simulate based on progress
        var progressRatio = (double)(burndownData?.ProgressPercentage ?? 0) / 100;
        return (int)(14 * (1 - progressRatio));
    }
}