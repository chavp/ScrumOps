services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: scrumops-postgres
    environment:
      POSTGRES_DB: scrumops
      POSTGRES_USER: scrumops
      POSTGRES_PASSWORD: scrumops123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - scrumops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scrumops -d scrumops"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ScrumOps API
  api:
    build:
      context: .
      dockerfile: src/ScrumOps.Api/Dockerfile
    container_name: scrumops-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=scrumops;Username=scrumops;Password=scrumops123
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - scrumops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: scrumops-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@scrumops.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - scrumops-network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  scrumops-network:
    driver: bridge